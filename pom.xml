<?xml version="1.0" encoding="UTF-8"?>
<!-- =============================================================================================
         Maven 2 project configuration file
         http://maven.apache.org/maven2/

         Build specification only:      mvn pre-site -N
         Build development snapshot:    mvn clean install
         Build with Proj.4 tests:       mvn install -DskipNativeLibraryTests=false
         Publish a release:             mvn clean install deploy -Pgeoapi-release
         Generate web site:             mvn clean install site -Pjdk9
                                        mvn site:deploy -DdistMgmtWebSiteUrl=file:///path/to/dir/
     ============================================================================================= -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>



  <!-- ===========================================================================================
           Project description (license, mailing lists, issues management, etc).
           Those descriptions appear in the web site published on www.geoapi.org.
       =========================================================================================== -->
  <groupId>org.opengis</groupId>
  <artifactId>geoapi-parent</artifactId>
  <packaging>pom</packaging>
  <version>4.0-SNAPSHOT</version>
  <name>GeoAPI</name>
  <url>http://www.geoapi.org/</url>
  <description>
    GeoAPI provides a set of programming language interfaces for geospatial applications.
    The project aims to reduce duplication and increase interoperability by providing neutral,
    interface-only APIs derived from OGC/ISO Standards.
  </description>

  <organization>
    <name>Open Geospatial Consortium</name>
    <url>http://www.opengeospatial.org/</url>
  </organization>
  <inceptionYear>1994</inceptionYear>

  <licenses>
    <license>
      <name>OGC copyright</name>
      <url>https://raw.githubusercontent.com/opengeospatial/geoapi/master/LICENSE.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:https://github.com/opengeospatial/geoapi</connection>
    <url>https://github.com/opengeospatial/geoapi</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/opengeospatial/geoapi/issues</url>
  </issueManagement>

  <mailingLists>
    <mailingList>
      <name>GeoAPI Standard Working Group (OGC)</name>
      <subscribe>https://lists.opengeospatial.org/mailman/listinfo/geoapi.swg</subscribe>
      <unsubscribe>https://lists.opengeospatial.org/mailman/listinfo/geoapi.swg</unsubscribe>
      <post>geoapi.swg@lists.opengeospatial.org</post>
      <archive>https://lists.opengeospatial.org/mailman/listinfo/geoapi.swg</archive>
    </mailingList>
  </mailingLists>

  <developers>
    <developer>
      <name>GeoAPI contributors</name>
      <organizationUrl>http://www.geoapi.org/</organizationUrl>
      <roles>
        <role>Java developers</role>
      </roles>
    </developer>
    <developer>
      <name>GeoAPI Standard Working Group</name>
      <organization>Open Geospatial Consortium</organization>
      <organizationUrl>http://www.opengeospatial.org/</organizationUrl>
      <roles>
        <role>Specification editors</role>
      </roles>
    </developer>
  </developers>



  <!-- ===========================================================================================
           Profiles and properties controlling the build.

           The default configuration is used for building snapshots, in order to test
           GeoAPI development by implementaters. For final releases by OGC staff, the
           "geoapi-release" profile shall be activated like below:

               mvn clean install deploy -Pgeoapi-release

           Optionally, if the Proj.4 native library is installed on the local machine,
           then GeoAPI can be built with the "-DskipNativeLibraryTests=false" option.
       =========================================================================================== -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <website.encoding>UTF-8</website.encoding>
    <skipNativeLibraryTests>true</skipNativeLibraryTests>
    <java.platform>8</java.platform>
    <future.source>module-info.java</future.source>             <!-- To exclude when JDK9 profile is not enabled. -->
    <unit.api.version>1.0</unit.api.version>                    <!-- To be removed when version 2.0 will be final. -->
  </properties>
  <profiles>
    <profile>
      <!--
        Build as Java 9 modules (experimental).
      -->
      <id>jdk9</id>
      <properties>
        <java.platform>9</java.platform>
        <future.source>(none)</future.source>
        <unit.api.version>2.0-SNAPSHOT</unit.api.version>       <!-- Property to be removed after Unit API 2 release. -->
      </properties>
      <repositories>
        <repository>
          <id>geotoolkit.org</id>                               <!-- Temporary repository for Unit API 2.0-SNAPSHOT. -->
          <name>Geotoolkit.org repository</name>
          <url>http://maven.geotoolkit.org</url>
          <releases>
            <enabled>false</enabled>
          </releases>
        </repository>
      </repositories>
    </profile>
    <profile>
      <!--
        Official release: require signing the JAR files.
      -->
      <id>geoapi-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <distributionManagement>
        <repository>
          <id>ossrh</id>
          <name>Open Source Software Repository Hosting</name>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
      </distributionManagement>
    </profile>
  </profiles>



  <!-- ===========================================================================================
           External dependencies used by GeoAPI or to be inherited by external projects
           using GeoAPI.   The <dependencyManagement> section declares version numbers.
           It is followed by a <dependencies> section listing the dependencies actually
           required by the core of GeoAPI library; other dependencies are used only for
           tests or examples.  External projects can inherit those version numbers with
           the following fragment in their pom.xml file:

                <dependencyManagement>
                  <dependencies>
                    <dependency>
                      <groupId>org.opengis</groupId>
                      <artifactId>geoapi-parent</artifactId>
                      <version>${geoapi.version}</version>
                      <type>pom</type>
                      <scope>import</scope>
                    </dependency>
                    ...
       =========================================================================================== -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>javax.measure</groupId>
        <artifactId>unit-api</artifactId>
        <version>${unit.api.version}</version>
      </dependency>
      <dependency>
        <groupId>tec.units</groupId>
        <artifactId>unit-ri</artifactId>
        <version>1.0.3</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <!-- The JUnit version number appears also in the Javadoc plugin configuration,
             in shell scripts, in Java code generating reports, and in NetBeans project
             configuration. If JUnit is updated, please search for the version number in
             the whole project. Search also for version number of the Hamcrest dependency. -->
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>javax.vecmath</groupId>
        <artifactId>vecmath</artifactId>
        <version>1.5.2</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- All dependencies required by the core of GeoAPI interfaces. -->
  <dependencies>
    <dependency>
      <groupId>javax.measure</groupId>
      <artifactId>unit-api</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>



  <!-- ===========================================================================================
           We use a different directory layout than the standard Maven layout in order
           to make easier to modularize the project with Jigsaw  (default Maven layout
           makes difficult to generate an aggregated Javadoc for several modules)  and
           for supporting other languages than Java. The src/main/<language> layout of
           Maven is unconvenient because it puts Java and Python main sources close to
           each other - at the expense of main sources and tests further apart - while
           in GeoAPI the different languages are used independently except for bridges.
       =========================================================================================== -->
  <build>
    <sourceDirectory>${project.basedir}/java/${module.name}/classes</sourceDirectory>
    <testSourceDirectory>${project.basedir}/java/${module.name}/tests</testSourceDirectory>
    <resources>
      <resource>
        <directory>${project.build.sourceDirectory}</directory>
        <excludes>
          <exclude>**/.*</exclude>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>${project.build.testSourceDirectory}</directory>
        <excludes>
          <exclude>**/.*</exclude>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
    </testResources>

    <!-- ===========================================================================================
             The plugin management section declares the version numbers of all plugins
             needed for building GeoAPI and associated documentation,  except web site
             generation which has its own section (see <reporting>). Configuration for
             each plugin appear after <pluginManagement> section.
         =========================================================================================== -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.asciidoctor</groupId>
          <artifactId>asciidoctor-maven-plugin</artifactId>
          <version>1.5.6</version>
        </plugin>
      </plugins>
    </pluginManagement>



    <!-- =========================================================================================
             Configuration check before compilation
         ========================================================================================= -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-jdk</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>10</version>
                </requireJavaVersion>
                <dependencyConvergence/>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>



      <!-- =========================================================================================
               Compilation
           ========================================================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <release>${java.platform}</release>
          <debug>false</debug>                                          <!-- Whether to include debugging information.  -->
          <optimize>true</optimize>                                     <!-- Use the compiler's optimization methods.   -->
          <encoding>${project.build.sourceEncoding}</encoding>
          <useIncrementalCompilation>false</useIncrementalCompilation>  <!-- https://issues.apache.org/jira/browse/MCOMPILER-209 -->
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <compilerArgs>
            <arg>-Xlint:all</arg>
            <arg>-Xdoclint:syntax,missing,accessibility</arg>
            <arg>--doclint-format</arg> <arg>html5</arg>
          </compilerArgs>
          <excludes>
            <exclude>${future.source}</exclude>
          </excludes>
        </configuration>
      </plugin>



    <!-- =========================================================================================
             Tests
         ========================================================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <maven.source.directory>${project.build.sourceDirectory}</maven.source.directory>
          </systemPropertyVariables>
          <printSummary>false</printSummary>
        </configuration>
      </plugin>



      <!-- =========================================================================================
               JAR packaging
           ========================================================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
            </manifest>
            <manifestEntries>
              <Specification-Title>GeoAPI</Specification-Title>
              <Specification-Version>${project.version}</Specification-Version>
              <Specification-Vendor>${project.organization.name}</Specification-Vendor>
              <Implementation-Vendor>The GeoAPI project</Implementation-Vendor>
              <Implementation-URL>http://www.geoapi.org/</Implementation-URL>
            </manifestEntries>
            <addMavenDescriptor>false</addMavenDescriptor>
          </archive>
          <skipIfEmpty>true</skipIfEmpty>
        </configuration>
      </plugin>


      <!-- ============================================================================================
               Remove previous snapshots from local repository
           ============================================================================================ -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>remove-old-artifacts</id>
            <goals>
              <goal>remove-project-artifact</goal>
            </goals>
            <configuration>
              <removeAll>false</removeAll>      <!-- Remove only snapshots of this project version. -->
            </configuration>
          </execution>
        </executions>
      </plugin>


      <!-- ============================================================================================
               Specification from AsciiDoctor files
           ============================================================================================ -->
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>specification</id>
            <phase>pre-site</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <sourceDocumentName>standard_document.adoc</sourceDocumentName>
              <outputDirectory>${project.build.directory}/site/snapshot</outputDirectory>
              <relativeBaseDir>true</relativeBaseDir>
              <backend>html</backend>
              <attributes>
                <data-uri>true</data-uri>               <!-- Should be false if the backend is pdf.-->
                <toc-placement>true</toc-placement>     <!-- Should be false if the backend is pdf.-->
              </attributes>
            </configuration>
          </execution>
        </executions>
      </plugin>



      <!-- =========================================================================================
               Web site generation and deployment
           ========================================================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <locales>en</locales>
          <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
          <outputEncoding>${website.encoding}</outputEncoding>
          <siteDirectory>${basedir}/site</siteDirectory>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.wagon</groupId>
            <artifactId>wagon-ssh</artifactId>
            <version>3.0.0</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>



  <!-- ===================================================================================================
         Reports configuration.
       =================================================================================================== -->
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.9</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>summary</report>
              <report>modules</report>
              <report>license</report>
              <report>scm</report>
              <report>cim</report>
              <report>mailing-list</report>
              <report>issue-tracking</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>



      <!-- =========================================================================================
               Javadoc generation
           ========================================================================================= -->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.0.1</version>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>javadoc-no-fork</report>
            </reports>
          </reportSet>
        </reportSets>
        <configuration>
          <top>
            <!-- Remove this notice for the final GeoAPI release! -->
            &lt;div class="snapshot-warning"&gt;&lt;b&gt;This specification is not final and is subject to change.&lt;/b&gt;&lt;br/&gt;
                For OGC standard, see &lt;a href="http://www.geoapi.org/3.0/javadoc/index.html"&gt;GeoAPI 3.0.1&lt;/a&gt;.
            &lt;/div&gt;
          </top>
          <encoding>${project.build.sourceEncoding}</encoding>
          <docencoding>${website.encoding}</docencoding>
          <charset>${website.encoding}</charset>
          <author>false</author>          <!-- Specifies whether or not the author text is included.              -->
          <version>false</version>        <!-- Includes or not the version text in the generated docs.            -->
          <noqualifier>all</noqualifier>  <!-- Omits qualifying package name from ahead of class names in output. -->
          <quiet>true</quiet>             <!-- Shuts off non-error and non-warning messages.                      -->
          <locale>en</locale>             <!-- The locale that javadoc uses when generating documentation.        -->
          <keywords>true</keywords>       <!-- Adds HTML meta keyword tags to the generated file for each class.  -->
          <breakiterator>true</breakiterator>
          <additionalOptions>
            -html5 -Xdoclint:syntax --add-stylesheet "${maven.multiModuleProjectDirectory}/normative/src/main/javadoc/geoapi.css"
          </additionalOptions>
          <additionalDependencies>
            <additionalDependency>
              <groupId>org.opengis</groupId>
              <artifactId>geoapi-pending</artifactId>
              <version>${project.version}</version>
            </additionalDependency>
          </additionalDependencies>

          <!-- Do not add the "API" word in document title, because it is already included in the "GeoAPI name. -->
          <doctitle>${project.name} ${project.version}</doctitle>
          <windowtitle>${project.name} ${project.version}</windowtitle>

          <!-- Doclet for special processing of CSS files. -->
          <doclet>org.opengis.tools.doclet.Doclet</doclet>
          <docletArtifact>
            <groupId>org.opengis</groupId>
            <artifactId>tools</artifactId>
            <version>${project.version}</version>
          </docletArtifact>

          <!-- Custom taglets implemented in Java. -->
          <taglets>
            <taglet>
              <tagletClass>org.opengis.tools.doclet.Departure</tagletClass>
            </taglet>
          </taglets>
          <tagletArtifact>
            <groupId>org.opengis</groupId>
            <artifactId>tools</artifactId>
            <version>${project.version}</version>
          </tagletArtifact>

          <!-- Enables the Javadoc tool to interpret a simple, one-argument
               custom block tag tagname in doc comments. Note: <placement/>
               should be a combination of the "Xaoptcmf" letters. -->
          <tags>
            <tag><placement>X</placement>    <name>category</name>  <head>Category:</head></tag>
            <tag><placement>tfmc</placement> <name>condition</name> <head>Condition:</head></tag>
            <tag><placement>tfmc</placement> <name>todo</name>      <head>TODO:</head></tag>
            <tag><placement>X</placement>    <name>issue</name>     <head>JIRA:</head></tag>
            <tag><placement>fm</placement>   <name>unitof</name>    <head>Unit:</head></tag>
          </tags>

          <!-- Creates links to existing javadoc-generated
               documentation of external referenced classes. -->
          <detectJavaApiLink>false</detectJavaApiLink>
          <links>
            <link>http://docs.oracle.com/javase/8/docs/api/</link>
            <link>http://docs.oracle.com/javaee/7/api/</link>                                       <!-- For InternationalString link. -->
            <link>http://download.java.net/media/java3d/javadoc/1.5.2/</link>
            <link>http://download.java.net/media/jai/javadoc/1.1.3/jai-apidocs/</link>
            <link>http://junit.org/junit4/javadoc/latest/</link>
            <link>http://www.unidata.ucar.edu/software/thredds/current/netcdf-java/javadoc/</link>  <!-- Used by example code. -->
            <link>http://www.geoapi.org/snapshot/javadoc/</link>                                    <!-- For modules that depend on GeoAPI. -->
          </links>
        </configuration>
      </plugin>


      <!-- =======================================================================================
               Python API documentation.

               We could use http://trustin.github.io/sphinx-maven-plugin/basic-usage.html,
               but command-line give us more control for now. This requires the developer
               to have Sphinx installed on his machine.
           ======================================================================================= -->
      <!--plugin>
        <groupId>kr.motd.maven</groupId>
        <artifactId>sphinx-maven-plugin</artifactId>
        <version>2.2.0</version>
        <inherited>false</inherited>
        <configuration>
          <asReport>true</asReport>
          <name>Python API</name>
          <description>GeoAPI abstract classes for Python</description>
          <outputDirectory>${project.reporting.outputDirectory}/snapshot/python</outputDirectory>
          <outputName>python</outputName>
        </configuration>
      </plugin -->



      <!-- =======================================================================================
               TODO tags
           ======================================================================================= -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <tagListOptions>
            <tagClasses>
              <tagClass>
                <displayName>TODO</displayName>
                <tags>
                  <tag>
                    <matchString>@todo</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                </tags>
              </tagClass>
            </tagClasses>
          </tagListOptions>
        </configuration>
      </plugin>
    </plugins>
  </reporting>



  <!-- ===========================================================================================
           Deployment to public servers
       =========================================================================================== -->
  <distributionManagement>
    <repository>
      <id>geoapi.snapshots</id>           <!-- For snapshots and milestones only -->
      <name>GeoAPI snapshots</name>
      <url>${distMgmtSnapshotsUrl}</url>
    </repository>
    <site>
      <id>geoapi</id>
      <name>GeoAPI web site</name>
      <url>${distMgmtWebSiteUrl}</url>
    </site>
  </distributionManagement>



  <!-- =========================================================================================
           All GeoAPI modules included in the build
       ========================================================================================= -->
  <modules>
    <module>build-tools</module>
    <module>standard</module>
<!--
    <module>geoapi-pending</module>
    <module>geoapi-conformance</module>
    <module>geoapi-examples</module>
    <module>geoapi-proj4</module>
    <module>geoapi-gdal</module>
    <module>geoapi-netcdf</module>
    <module>geoapi-java-python</module>
-->
  </modules>
</project>
