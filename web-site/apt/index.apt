                                      ----------------
                                            Home
                                      ----------------

GeoAPI

  GeoAPI provides a set of Java and Python language programming interfaces for geospatial applications.

  The interfaces developed by the GeoAPI project include many of the data structures and
  manipulation methods needed for geographic information system applications. In a series
  of packages, {{{./3.0/index.html}GeoAPI 3.0}} defines a core set of interfaces for metadata
  handling, for geodetic referencing, projection and conversion. The "{{{./geoapi-pending/index.html}pending}}"
  part of GeoAPI defines interfaces for the handling of georeferenced imagery, for the construction
  and manipulation of vector geometry and topological data structures, and for the
  description and use of geospatial "feature" entities. Beyond this core, GeoAPI-pending
  further defines interfaces for data access and storage including sophisticated
  filter queries, and for display.

  The GeoAPI interfaces closely follow the abstract model and concrete specifications
  published collaboratively by the {{{http://www.isotc211.org/}International Organization
  for Standardization}} (ISO) in its 19100 series of documents and the
  {{{http://www.opengeospatial.org/}Open Geospatial Consortium}} (OGC) in its abstract
  and implementation specifications.
  GeoAPI provides an interpretation and adaptation of these standards to match
  the expectations of Java or Python programmers. These standards provide GeoAPI with the
  richness which comes from the expertise of the specification writers. Clients
  benefit from the potential for inter-operability which comes from using a well
  defined, standardized data model. Implementors benefit from having a
  pre-defined set of well considered, formal boundaries to modularize their
  development work.

  The GeoAPI interfaces provide a layer which separates client code, which would
  call the API, from library code, which implements the API. These interfaces
  are not an implementation. This follows a similar pattern to the well known
  {{{http://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/}JDBC}} API
  which provides a standardized interface to databases. Clients can use the
  JDBC API without concern for the particular implementation which they will
  use. Various groups have implemented different subsets of GeoAPI, see
  the {{{./implementations.html}list of known implementations}} for details.

  GeoAPI provides also {{{./geoapi-conformance/index.html}JUnit tests}} that implementors can
  use for testing their implementations, and various {{{./geoapi-examples/index.html}examples}}
  in the public domain.


* The GeoAPI project

  The GeoAPI project consists of a loose collaboration of volunteer programmers
  and scientists from around the globe motivated by diverse interests. Many
  work on GeoAPI as part of their own efforts writing client applications which
  use the API or working on libraries which implement the API.
  In addition, a {{{https://portal.opengeospatial.org/?m=projects&a=view&project_id=294}GeoAPI Standard Working Group}}
  has formed within the OGC to formalize GeoAPI as a published OGC standard.


    * The code repository is hosted in the {{{https://github.com/opengeospatial/geoapi}OGC group of projects}} on GitHub.

    * The project uses a {{{https://github.com/opengeospatial/geoapi/issues}GitHub issue tracker}}.

    * GeoAPI has an {{{http://portal.opengeospatial.org/twiki/bin/view/Member/GeoAPI}OGC wiki}}
      for the Standard Working Group (SWG) tasks.

  GeoAPI is free software. GeoAPI may be used and redistributed by
  anyone for any purpose requiring only maintaining the copyright and license
  terms on the source code and derivative files. The copyright to the GeoAPI
  interfaces is held by the Open Geospatial Consortium.
  See {{{http://www.opengeospatial.org/ogc/software}the OGC legal page}} for details.

  More information can be found on the {{{./faq.html}Frequently Asked Questions}} page.


* The GeoAPI code structure

  GeoAPI consists of a series of packages, many of which follow one
  specific ISO/OGC specification document.
  The different packages have reached different levels of stability so that the
  project has been split into two modules.

    * The {{{./geoapi/index.html}geoapi}} module contains only the interfaces which
      have remained stable for a long period of time and have both been fully
      implemented and had that implementation extensively tested. As packages
      mature, they will be moved to this module.

    * The {{{./geoapi-pending/index.html}geoapi-pending}} module provides additional
      interfaces with different levels of stability ranging from the very trusted
      to modules which are experimental since they do not yet have any known
      implementation.

  The project contains a {{{./geoapi-conformance/index.html}geoapi-conformance}} module
  which can be run as a test harness to evaluate the correctness of any implementation.
  A <proof of concept> is provided by the {{{./geoapi-proj4/index.html}geoapi-proj4}}
  module, using wrappers around the well-known C/C++ Proj.4 library.
  Finally, the {{{./geoapi-examples/index.html}geoapi-examples}} module
  places code samples in public domain, which implementors can use as a
  starting point for their own products.

  GeoAPI uses the {{{http://maven.apache.org}Maven}} build tool. External
  projects which also use this tool can integrate GeoAPI into their Maven
  dependencies using one of the {{{./maven.html}repositories listed here}}.
