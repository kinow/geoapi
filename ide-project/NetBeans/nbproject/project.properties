#
# GeoAPI project file for NetBeans.
# This is used as an alternative to Maven projects for easier development in the NetBeans IDE.
# This configuration will create one big JAR file instead than one JAR for each module.
# This is used as a complement, not a replacement, to Maven.
#
application.title    = GeoAPI
application.vendor   = Open Geospatial Consortium
application.homepage = http://www.geoapi.org/
application.desc     = GeoAPI provides a set of Java language programming interfaces for geospatial applications.
project.licensePath  = ../LicenseHeader.txt
jlink.launcher       = false
jlink.launcher.name  = GeoAPI
javac.external.vm    = false
source.encoding      = UTF-8
includes             = **
excludes             =

#
# Directories of Java modules.
#
project.root        = ../..
src.tools.dir       = ${project.root}/build-tools/java
src.standard.dir    = ${project.root}/standard/java
src.pending.dir     = ${project.root}/pending/java
src.bridges.dir     = ${project.root}/bridges/java
src.examples.dir    = ${project.root}/examples/java
test.tools.dir      = ${src.tools.dir}
test.standard.dir   = ${src.standard.dir}
test.bridges.dir    = ${src.bridges.dir}
test.examples.dir   = ${src.examples.dir}

#
# Sub-directories inside each above-cited module directory.
#
src.java.dir.path   = classes
test.src.dir.path   = tests

#
# Version numbers for all dependencies.
# Those dependencies must exist in the local Maven repository.
# Those numbers should match the ones declared in the pom.xml files.
#
jsr363.version     = 1.0
jsr363-ri.version  = 1.0.3
uom-lib.version    = 1.0.2
vecmath.version    = 1.5.2
jdom2.version      = 2.0.4
netcdf.version     = 4.6.10
joda-time.version  = 2.8.1
httpclient.version = 4.5.1
slf4j.version      = 1.7.22
guava.version      = 18.0
gdal.version       = 2.2.0
jpy.version        = 0.9.0
junit.version      = 4.12
hamcrest.version   = 1.3

#
# Classpaths for compilation, execution and tests.
# The dependencies are read directy from the local Maven directory.
#
maven.repository = ${user.home}/.m2/repository

javac.classpath=\
    ${maven.repository}/javax/measure/unit-api/${jsr363.version}/unit-api-${jsr363.version}.jar:\
    ${maven.repository}/tec/units/unit-ri/${jsr363-ri.version}/unit-ri-${jsr363-ri.version}.jar:\
    ${maven.repository}/javax/vecmath/vecmath/${vecmath.version}/vecmath-${vecmath.version}.jar:\
    ${maven.repository}/org/gdal/gdal/${gdal.version}/gdal-${gdal.version}.jar:\
    ${maven.repository}/edu/ucar/cdm/${netcdf.version}/cdm-${netcdf.version}.jar:\
    ${maven.repository}/edu/ucar/udunits/${netcdf.version}/udunits-${netcdf.version}.jar:\
    ${maven.repository}/org/jpy/jpy/${jpy.version}/jpy-${jpy.version}.jar
javac.processorpath=\
    ${javac.classpath}
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${maven.repository}/junit/junit/${junit.version}/junit-${junit.version}.jar:\
    ${maven.repository}/org/hamcrest/hamcrest-core/${hamcrest.version}/hamcrest-core-${hamcrest.version}.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}:\
    ${maven.repository}/org/jdom/jdom2/${jdom2.version}/jdom2-${jdom2.version}.jar:\
    ${maven.repository}/commons-httpclient/commons-httpclient/${httpclient.version}/commons-httpclient-${httpclient.version}.jar:\
    ${maven.repository}/edu/ucar/httpservices/${netcdf.version}/httpservices-${netcdf.version}.jar:\
    ${maven.repository}/joda-time/joda-time/${joda-time.version}/joda-time-${joda-time.version}.jar:\
    ${maven.repository}/tec/uom/lib/uom-lib-common/${uom-lib.version}/uom-lib-common-${uom-lib.version}.jar:\
    ${maven.repository}/com/google/guava/guava/${guava.version}/guava-${guava.version}.jar:\
    ${maven.repository}/org/slf4j/slf4j-api/${slf4j.version}/slf4j-api-${slf4j.version}.jar:\
    ${maven.repository}/org/slf4j/slf4j-jdk14/${slf4j.version}/slf4j-jdk14-${slf4j.version}.jar
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}

#
# Module paths.
#
javac.modulepath=
javac.processormodulepath=
javac.test.modulepath=\
    ${javac.modulepath}:\
    ${build.modules.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
run.modulepath=\
    ${javac.modulepath}:\
    ${build.modules.dir}
run.test.modulepath=\
    ${javac.test.modulepath}:\
    ${build.test.modules.dir}
debug.modulepath=\
    ${run.modulepath}
debug.test.modulepath=\
    ${run.test.modulepath}
jlink.additionalmodules=
jlink.additionalparam=

#
# Target directories.
# Those directories is removed when the project is cleaned.
#
build.dir                   = build
build.classes.dir           = ${build.dir}/classes
build.modules.dir           = ${build.dir}/modules
build.generated.dir         = ${build.dir}/generated
build.generated.sources.dir = ${build.dir}/generated-sources
build.test.classes.dir      = ${build.dir}/test/classes
build.test.modules.dir      = ${build.dir}/test/modules
build.test.results.dir      = ${build.dir}/test/results
build.sysclasspath          = ignore
build.classes.excludes      = **/*.java,**/*.form

dist.dir                    = dist
dist.jar                    = ${dist.dir}/geoapi.jar
dist.jlink.dir              = ${dist.dir}/jlink
dist.jlink.output           = ${dist.jlink.dir}/GeoAPI
dist.javadoc.dir            = ${dist.dir}/javadoc
dist.archive.excludes       =
mkdist.disabled             = true
no.dependencies             = true

#
# Compilation and javadoc options.
#
javac.compilerargs      =
javac.deprecation       = true
javac.source            = 9
javac.target            = 9
jar.compress            = true
jar.index               = ${jnlp.enabled}
jar.archive.disabled    = ${jnlp.enabled}
javadoc.html5           = true
javadoc.additionalparam =
javadoc.author          = false
javadoc.encoding        = ${source.encoding}
javadoc.noindex         = false
javadoc.nonavbar        = false
javadoc.notree          = false
javadoc.private         = false
javadoc.splitindex      = false
javadoc.use             = true
javadoc.version         = false
javadoc.windowtitle     = ${application.title}

annotation.processing.enabled            = false
annotation.processing.enabled.in.editor  = false
annotation.processing.run.all.processors = true
annotation.processing.processors.list    =
annotation.processing.source.output      = ${build.generated.sources.dir}/ap-source-output

jnlp.codebase.type      = no.codebase
jnlp.descriptor         = application
jnlp.enabled            = false
jnlp.mixed.code         = default
jnlp.offline-allowed    = false
jnlp.signed             = false
jnlp.signing            =
jnlp.signing.alias      =
jnlp.signing.keystore   =

#
# Execution parameters.
#
run.jvmargs        =
platform.active    = default_platform
endorsed.classpath =
